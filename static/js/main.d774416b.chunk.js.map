{"version":3,"sources":["components/pokeapi-service-context/index.js","components/hoc/with-pokeapi-service.js","constans.js","components/menu/menu.js","components/menu/index.js","components/header/index.js","components/header/header.js","components/item-list/item-list.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/error_icon.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/hoc/with-data.js","components/item-list/container.js","components/hoc/compose.js","components/pages/index.js","components/pages/main-page.js","services/pokeapi-service.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/item-details/item-details.js","components/item-details/container.js","components/app/app.js","index.js"],"names":["React","createContext","PokeapiServiceProvider","Provider","PokeapiServiceConsumer","Consumer","withPokeapiService","mapMethodsToProps","Wrapped","props","pokeapiService","serviceProps","ID_REG_EXP","IMAGE_BASE","Menu","handleChange","selectedOption","onItemSelected","setState","id","state","options","bind","getData","this","nameList","then","res","array","map","item","url","match","pokemonName","value","name","label","push","classNamePrefix","placeholder","onChange","Component","getAllPokemons","Header","history","useHistory","className","to","ItemList","currentPage","cardsPerPage","handleClick","event","Number","target","data","indexOfLastCard","indexOfFirstCard","pageNumbers","items","slice","Constans","onClick","src","i","Math","ceil","length","renderPageNumbers","number","Fragment","defaultProps","Spinner","ErrorIndicator","icon","alt","withData","View","loading","error","update","newData","catch","ItemListContainer","funcs","comp","reduceRight","prevResult","f","compose","getPokemon","MainPage","PokeapiService","getResource","link","a","fetch","ok","Error","status","json","results","pokemon","_transformPokemon","baseExperience","base_experience","height","isDefault","is_default","order","weight","abilities","forms","heldItems","held_items","image","sprites","front_default","moves","species","stats","types","ErrorBoundary","hasError","children","ItemView","useState","isCollapsed","setIsCollapsed","obj","ability","type","style","gridArea","stat","base_stat","effort","el","move","ItemDetails","componentDidUpdate","prevProps","itemId","updateItem","onError","err","newItem","hasData","errorMessage","spinner","content","App","width","window","innerWidth","path","component","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d774416b.chunk.js","sourcesContent":["import React from 'react'\n\nconst {\n  Provider: PokeapiServiceProvider,\n  Consumer: PokeapiServiceConsumer\n} = React.createContext()\n\nexport {PokeapiServiceProvider, PokeapiServiceConsumer}","import React from 'react'\nimport {PokeapiServiceConsumer} from '../pokeapi-service-context'\n\nconst withPokeapiService = (mapMethodsToProps) => (Wrapped) => {\n  return (props) => {\n    return (\n      <PokeapiServiceConsumer>\n        {\n          (pokeapiService) => {\n            const serviceProps = mapMethodsToProps(pokeapiService)\n            \n            return (\n              <Wrapped {...props} {...serviceProps} />\n            )\n          }\n        }\n      </PokeapiServiceConsumer>\n    )\n  }\n} \n\nexport default withPokeapiService","// export const HOME_URL = process.env.PUBLIC_URL\n\nexport const ID_REG_EXP = /\\/([0-9]*)\\/$/\nexport const API_BASE = 'https://pokeapi.co/api/v2'\nexport const IMAGE_BASE = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon'\n\n\n// альтернативный ресурс с изображениями более высокого качества \n// export const IMAGE_BASE = 'https://pokeres.bastionbot.org/images/pokemon'\n\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport withPokeapiService from '../hoc/with-pokeapi-service'\nimport PropTypes from 'prop-types'\nimport { ID_REG_EXP } from '../../constans' \n\nconst MenuContainer = (props) => {\n  return (\n    <Menu {...props} />\n  )\n}\n\nconst mapMethodsToProps = (pokeapiService) => {\n  return {\n    getData: pokeapiService.getAllPokemons\n  }\n}\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      options: [],\n      selectedOption: null\n    }\n\n    this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    const { getData } = this.props\n    const nameList = []\n\n    getData()\n      .then(res => {\n        return res\n      })\n      .then((array) => {\n        array.map(item => {\n          const id = item.url.match(ID_REG_EXP)[1]\n\n          const pokemonName = {\n            value: item.name,\n            label: item.name,\n            id: id\n          }\n          nameList.push(pokemonName)\n        })\n        this.setState({\n          options: nameList\n        })\n      })\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      selectedOption: null\n    }) \n  }\n  \n  handleChange = selectedOption => {\n    const {onItemSelected} = this.props\n\n    this.setState({ selectedOption })\n    onItemSelected(selectedOption.id)\n\n  }\n\n  render () {\n    const {selectedOption, options} = this.state\n    \n    return (\n      <div>\n        <Select \n          classNamePrefix=\"pokemon-list\"\n          placeholder={\"Choose pokemon\"}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={options}/> \n      </div>\n    )\n  }\n}\n\nMenu.propTypes = {\n  getData: PropTypes.func.isRequired,\n  onItemSelected: PropTypes.func\n}\n\nexport default withPokeapiService(mapMethodsToProps)(MenuContainer)","import Menu from './menu'\n\nexport default Menu","import Header from './header'\n\nexport default Header","import React from 'react'\nimport './header.scss'\nimport { Link, useHistory } from 'react-router-dom'\nimport Menu from '../menu'\n\nconst Header = () => {\n  const history = useHistory()\n\n  return (\n    <div className=\"header\">\n\n      <div className=\"container\">\n        <h3 className=\"logo\">\n          <Link to=\"/\">Pokemon App</Link>\n        </h3>\n\n        <div className=\"pokemon-list\">\n          <Menu onItemSelected={(id) => history.push(id)} />\n        </div>\n        \n      </div>\n        \n    </div>\n  )\n}   \n\nexport default Header","import React, { Component } from 'react'\nimport './item-list.scss'\nimport PropTypes from 'prop-types'\nimport * as Constans from '../../constans'\n\nexport default class ItemList extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      currentPage: 1,\n      cardsPerPage: 20\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    })\n  }\n\n  render() {\n    const {currentPage, cardsPerPage} = this.state\n    const {data, onItemSelected} = this.props\n\n    const indexOfLastCard = currentPage * cardsPerPage\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage\n    const currentTodos = data.slice(indexOfFirstCard, indexOfLastCard)\n    const pageNumbers = []\n\n    const items = currentTodos.map((item) => {\n      const id = item.url.match(Constans.ID_REG_EXP)[1]\n  \n      return (\n        <li className=\"list-group-item card\"\n          key={id}\n          onClick={() => \n          onItemSelected(id)}>\n            <img src={`${Constans.IMAGE_BASE}/${id}.png`} />\n            <span>{item.name}</span>\n        </li>\n      )\n    })\n\n    for (let i=1; i<=Math.ceil(data.length / cardsPerPage); i++) {\n      pageNumbers.push(i)\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <li className=\"page-link\"\n          key={number}\n          id={number}\n          onClick={this.handleClick}\n        >\n          {number}\n        </li>\n      )\n    })\n\n    return (\n      <React.Fragment> \n        <ul className=\"list-group item-list grid\">\n          {items}\n        </ul>\n  \n        <ul className=\"pagination\">\n          {renderPageNumbers}\n        </ul>     \n      </React.Fragment>\n    ) \n  }\n}\n\nItemList.defaultProps = {\n  onItemSelected: () => {}\n}\n\nItemList.propTypes = {\n  onItemSelected: PropTypes.func,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n}","import Spinner from './spinner'\n\nexport default Spinner","import React from 'react'\nimport './spinner.scss'\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-eclipse-gzsbpq8et6o\">\n      <div className=\"ldio-vc76htzamw\">\n        <div></div>\n      </div>\n    </div>\n  )\n}  \n\nexport default Spinner\n","export default __webpack_public_path__ + \"static/media/error_icon.96ed97d8.png\";","import ErrorIndicator from './error-indicator'\n\nexport default ErrorIndicator","import React from 'react'\nimport './error-indicator.scss'\nimport icon from './error_icon.png'\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n      <img src={icon} alt=\"error icon\" />\n      <span className=\"boom\">BOOM!</span>\n      <span>Something has gone wrong</span>\n    </div>\n  )\n}\n\nexport default ErrorIndicator\n","import React, {Component} from 'react'\nimport Spinner from '../spinner'\nimport ErrorIndicator from '../error-indicator'\n\nconst withData = (View) => {\n\n  return class extends Component {\n    state = {\n      data: null,\n      loading: true,\n      error: false\n    }\n  \n    componentDidMount() {\n      this.update() \n    }\n\n    update() {\n      this.setState({\n        loading: true,\n        error: false\n      })\n\n      this.props.getData()\n        .then((data) => {\n          const newData = data\n          this.setState({\n            data: newData,\n            loading: false\n          })\n        })\n        .catch(() => {\n          this.setState({\n            error: true,\n            loading: false \n          })\n        }) \n    }\n\n    render() {\n      const { data, loading, error } = this.state\n\n      if (loading) {\n        return <Spinner />\n      }\n\n      if (error) {\n        return <ErrorIndicator />\n      }\n       \n      return (\n        <View {...this.props} data={data} />\n      )\n    }\n  }\n} \n\nexport default withData","import React from 'react'\nimport ItemList from './item-list'\nimport withData from '../hoc/with-data'\nimport withPokeapiService from '../hoc/with-pokeapi-service'\nimport compose from '../hoc/compose'\n\nconst mapMethodsToProps = (pokeapiService) => {\n  return {\n    getData: pokeapiService.getAllPokemons,\n    getPokemon: pokeapiService.getPokemon\n  }\n}\n\nconst ItemListContainer = compose(\n                            withPokeapiService(mapMethodsToProps),\n                            withData\n                          )(ItemList)\n\nexport default ItemListContainer","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (prevResult, f) => f(prevResult), comp)\n}\n\nexport default compose  ","import MainPage from './main-page'\n\nexport default MainPage","import React from 'react'\nimport ItemListContainer from '../item-list/container'\n\nconst MainPage = ({ history }) => {\n\n  return(\n    <div className=\"main-page\">\n      <div className=\"card-container\">\n        <ItemListContainer onItemSelected={(id) => history.push(id)} />\n      </div>\n    </div>\n  )\n}\n\nexport default MainPage","import { API_BASE } from '../constans'\n\n// класс-сервис, который инкапсулирует код для работы с сервером\n// и изолирует его от остального кода приложения\n\nexport default class PokeapiService {\n\n  getResource = async (link) => {\n    const res = await fetch(`${API_BASE}${link}`)\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${link}` + \n      `, received ${res.status}`)\n    }\n    return res.json()\n  }\n\n  getAllPokemons = async () => {\n    const res = await this.getResource(`/pokemon/?limit=75`)   \n    return res.results\n  }\n\n  getPokemon = async (id) => {\n    const pokemon = await this.getResource(`/pokemon/${id}`)\n    return this._transformPokemon(pokemon)\n  }\n\n  _transformPokemon = (pokemon) => {\n    return {\n      id: pokemon.id,\n      name: pokemon.name,\n      baseExperience: pokemon.base_experience,\n      height: pokemon.height,\n      isDefault: pokemon.is_default,\n      order: pokemon.order,\n      weight: pokemon.weight,\n      abilities: pokemon.abilities,\n      forms: pokemon.forms,\n      heldItems: pokemon.held_items,\n      image: pokemon.sprites.front_default,\n      moves: pokemon.moves,\n      species: pokemon.species,\n      stats: pokemon.stats,\n      types: pokemon.types\n    }\n  }\n}\n","import ErrorBoundary from './error-boundary'\n\nexport default ErrorBoundary","import React, { Component } from 'react'\nimport ErrorIndicator from '../error-indicator' \n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    })\n  }\n\n  render() {\n    const {hasError} = this.state\n    \n    if (hasError) {\n      return <ErrorIndicator />\n    }\n    return this.props.children\n  }\n}","import React, {useState} from 'react'\nimport { IMAGE_BASE } from '../../constans'\nimport './item-details.scss'\n\nconst ItemView = ({item}) => {\n  \n  const [isCollapsed, setIsCollapsed] = useState(true)\n  const handleCollapse = () => {\n    setIsCollapsed(!isCollapsed)\n  }\n\n  return (\n    <div className=\"item\">\n\n      <img className=\"item-image\"\n          src={`${IMAGE_BASE}/${item.id}.png`} />\n\n      <div className=\"item-info item-info--base\">\n        <h4>{item.name}</h4> \n        <ul>\n          <li><span>Base experience:</span> {item.baseExperience}</li>\n          <li><span>Height:</span> {item.height}</li>\n          <li><span>Weight:</span> {item.weight}</li>\n          <li><span>Order:</span> {item.order}</li>\n          <li><span>Species:</span> {item.species.name}</li>\n        </ul>\n      </div>\n\n      <ul className=\"item-info item-info--details\">\n        <li><span>Abilities:</span>\n          <ul className=\"item-inner-ul\" >\n            {item.abilities.map((obj, i) => {\n              return (\n                <li key={i}>\n                  {obj.ability.name}\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n        <li><span>Forms:</span>\n          <ul className=\"item-inner-ul\">\n            {item.forms.map((obj, i) => {\n              return (\n                <li key={i}>\n                  {obj.name}\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n        <li><span>Type:</span> \n          <ul className=\"item-inner-ul\">\n            {item.types.map((obj, i) => {\n              return (\n                <li key={i}>\n                  {obj.type.name}\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n        <li><span>Held Items:</span> \n          <ul className=\"item-inner-ul\">\n            {item.heldItems.map((obj, i) => {\n              return (\n                <li key={i}>\n                  {obj.item.name}\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n        <li style={{gridArea: '1 / 1 / 4 / 2'}}>\n          <span>Stats:</span>\n          <ul className=\"item-inner-ul\">\n            {item.stats.map((obj, i) => {\n              return (\n                <li key={i}> \n                  <p>{obj.stat.name}</p>\n                  <p><span>Base stat:</span> {obj.base_stat}</p>\n                  <p><span>Effort:</span> {obj.effort}</p>\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n        <li><a className=\"btn btn-link expand\" onClick={handleCollapse}>\n          <span>Moves</span> \n          </a>\n          <ul \n            className={`item-inner-ul item-inner-ul--large ${isCollapsed ? 'collapse' : ''}`}>\n            {item.moves.map((el, i) => {\n              return (\n                <li key={i}>\n                  {el.move.name}\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n\n      </ul>    \n    </div>\n  )\n}\n\nexport default ItemView\n","import React, { Component } from 'react'\nimport withPokeapiService from '../hoc/with-pokeapi-service'\nimport ItemView from './item-details'\nimport Spinner from '../spinner'\nimport ErrorIndicator from '../error-indicator'\nimport PropTypes from 'prop-types'\n\nconst ItemDetailsContainer = (props) => {\n  return (\n    <ItemDetails {...props} />\n  )\n}\n\nconst mapMethodsToProps = (pokeapiService) => {\n  return {\n    getData: pokeapiService.getPokemon\n  }\n}\n\nclass ItemDetails extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      item: null,\n      loading: true,\n      error: false\n    }\n  }\n  \n  componentDidMount() {\n    this.updateItem()\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem()\n    }\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  updateItem() {\n    const { itemId, getData } = this.props\n\n    if (!itemId) {\n      return\n    } \n\n    getData(itemId) \n      .then((res) => {\n        const newItem = res\n        this.setState({\n          item: newItem,\n          loading: false,\n          error: false\n        })\n      }) \n  }\n\n  render() {\n    const {item, loading, error} = this.state\n\n    const hasData = !(loading || error)\n    const errorMessage = error? <ErrorIndicator /> : null\n    const spinner = loading? <Spinner /> : null\n    const content = hasData? <ItemView item={item} /> : null\n\n    return (\n      <div className=\"card item-details\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    )\n  }\n}\n\nItemDetails.propTypes = {\n  itemId: PropTypes.string.isRequired,\n  getData: PropTypes.func\n}\n\nexport default withPokeapiService(mapMethodsToProps)(ItemDetailsContainer)","import React, { Component } from 'react'\nimport '../../style/bootstrap.min.css'\nimport './app.scss'\nimport Header from '../header'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainPage from '../pages'\nimport PokeapiService from '../../services/pokeapi-service'\nimport { PokeapiServiceProvider } from '../pokeapi-service-context'\nimport ErrorBoundary from '../error-boundary'\nimport ErrorIndicator from '../error-indicator'\nimport ItemDetailsContainer from '../item-details/container'\n\nexport default class App extends Component {  \n  pokeapiService = new PokeapiService()\n\n  state = {\n    hasError: false,\n    width: window.innerWidth\n  }\n\n  componentDidCatch() {\n    this.setState({hasError: true})\n  }\n\n  render() {\n\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n\n    return (\n      <ErrorBoundary>\n        <PokeapiServiceProvider value={this.pokeapiService}>\n          <Router>\n            <div className=\"app\">\n              <Header />\n              \n              <ErrorBoundary>\n                <div className=\"container\">\n                  <Switch>\n\n                    <Route path='/' component={MainPage} exact />  \n                    <Route path='/:id?' \n                          render={({ match }) => {\n                            const { id } = match.params \n                            return <ItemDetailsContainer itemId={id}/> \n                          }}\n                    />\n                  </Switch>\n                </div>\n              </ErrorBoundary>\n\n            </div>\n          </Router>\n        </PokeapiServiceProvider>\n      </ErrorBoundary>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}